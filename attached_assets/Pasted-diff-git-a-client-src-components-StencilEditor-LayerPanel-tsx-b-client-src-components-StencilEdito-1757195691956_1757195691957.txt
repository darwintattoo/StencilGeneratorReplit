diff --git a/client/src/components/StencilEditor/LayerPanel.tsx b/client/src/components/StencilEditor/LayerPanel.tsx
index 63ca26192a167e497616c73b3e58dd71bcb594c4..fb0394e145c6628560c43d8c34aa61248cb86428 100644
--- a/client/src/components/StencilEditor/LayerPanel.tsx
+++ b/client/src/components/StencilEditor/LayerPanel.tsx
@@ -1,55 +1,59 @@
 import React from 'react';
 import { Button } from '@/components/ui/button';
 import { Switch } from '@/components/ui/switch';
 import { Slider } from '@/components/ui/slider';
 import { GripVertical, Eye, EyeOff } from 'lucide-react';
 import type { LayersState } from './types';
 
 const DRAWING_COLORS = ['#000000', '#ef4444', '#3b82f6'];
 
 interface LayerPanelProps {
   isOpen: boolean;
   layers: LayersState;
   toggleLayer: (key: string, visible: boolean) => void;
   setOpacity: (key: string, opacity: number) => void;
   brushColor: string;
   setBrushColor: (color: string) => void;
   stencilHue: number;
   setStencilHue: (hue: number) => void;
+  stencilSaturation: number;
+  setStencilSaturation: (saturation: number) => void;
   onClose: () => void;
 }
 
 export default function LayerPanel({
   isOpen,
   layers,
   toggleLayer,
   setOpacity,
   brushColor,
   setBrushColor,
   stencilHue,
   setStencilHue,
+  stencilSaturation,
+  setStencilSaturation,
   onClose
 }: LayerPanelProps) {
   if (!isOpen) return null;
 
   return (
     <div className="absolute right-0 top-0 h-full w-80 border-l border-gray-600 p-4 overflow-y-auto z-50" style={{ backgroundColor: '#1a1a1a' }}>
       <div className="flex items-center justify-between mb-4 sticky top-0 pb-2 z-50" style={{ backgroundColor: '#1a1a1a' }}>
         <h3 className="text-white font-medium">Capas</h3>
         <Button
           variant="ghost"
           size="sm"
           onClick={onClose}
           className="text-gray-400 hover:text-white bg-gray-800 hover:bg-gray-700 min-w-[32px] h-8"
         >
           ×
         </Button>
       </div>
 
       <div className="space-y-4">
         <div className="rounded-lg p-3" style={{ backgroundColor: '#2d2d2d' }}>
           <div className="flex items-center gap-3 mb-2">
             <GripVertical className="w-4 h-4 text-gray-300" />
             <Switch
               checked={layers.drawing.visible}
               onCheckedChange={(checked) => toggleLayer('drawing', checked)}
diff --git a/client/src/components/StencilEditor/LayerPanel.tsx b/client/src/components/StencilEditor/LayerPanel.tsx
index 63ca26192a167e497616c73b3e58dd71bcb594c4..fb0394e145c6628560c43d8c34aa61248cb86428 100644
--- a/client/src/components/StencilEditor/LayerPanel.tsx
+++ b/client/src/components/StencilEditor/LayerPanel.tsx
@@ -102,50 +106,61 @@ export default function LayerPanel({
               <button
                 onClick={() => setStencilHue(200)}
                 className={`w-7 h-7 rounded-full border-2 ${
                   stencilHue === 200 ? 'border-white ring-2 ring-gray-400' : 'border-gray-400'
                 }`}
                 style={{ backgroundColor: '#000000' }}
                 title="Negro"
               />
               <button
                 onClick={() => setStencilHue(0)}
                 className={`w-7 h-7 rounded-full border-2 ${
                   stencilHue === 0 ? 'border-white ring-2 ring-gray-400' : 'border-gray-400'
                 }`}
                 style={{ backgroundColor: '#ef4444' }}
                 title="Rojo"
               />
               <button
                 onClick={() => setStencilHue(220)}
                 className={`w-7 h-7 rounded-full border-2 ${
                   stencilHue === 220 ? 'border-white ring-2 ring-gray-400' : 'border-gray-400'
                 }`}
                 style={{ backgroundColor: '#3b82f6' }}
                 title="Azul"
               />
             </div>
+            <div className="mt-4">
+              <div className="text-xs text-gray-300 mb-2">Saturación</div>
+              <Slider
+                value={[stencilSaturation]}
+                onValueChange={([value]) => setStencilSaturation(value)}
+                max={100}
+                min={0}
+                step={1}
+                className="w-full"
+              />
+            </div>
           </div>
         </div>
 
         <div className="rounded-lg p-3" style={{ backgroundColor: '#2d2d2d' }}>
           <div className="flex items-center gap-3 mb-2">
             <GripVertical className="w-4 h-4 text-gray-400" />
             <Switch
               checked={layers.original.visible}
               onCheckedChange={(checked) => toggleLayer('original', checked)}
             />
             <span className="text-white text-sm font-medium flex-1">Original</span>
             <span className="text-gray-400 text-xs">N</span>
             {layers.original.visible ? (
               <Eye className="w-4 h-4 text-gray-400" />
             ) : (
               <EyeOff className="w-4 h-4 text-gray-400" />
             )}
           </div>
           <div className="ml-7 mt-2">
             <Slider
               value={[layers.original.opacity]}
               onValueChange={([value]) => setOpacity('original', value)}
               max={100}
               min={0}
               step={1}
diff --git a/client/src/components/StencilEditor/LayerPanel.tsx b/client/src/components/StencilEditor/LayerPanel.tsx
index 63ca26192a167e497616c73b3e58dd71bcb594c4..fb0394e145c6628560c43d8c34aa61248cb86428 100644
--- a/client/src/components/StencilEditor/LayerPanel.tsx
+++ b/client/src/components/StencilEditor/LayerPanel.tsx
@@ -161,26 +176,26 @@ export default function LayerPanel({
               checked={layers.background.visible}
               onCheckedChange={(checked) => toggleLayer('background', checked)}
             />
             <span className="text-white text-sm font-medium flex-1">Color de fondo</span>
             <span className="text-gray-300 text-xs">N</span>
             {layers.background.visible ? (
               <Eye className="w-4 h-4 text-gray-300" />
             ) : (
               <EyeOff className="w-4 h-4 text-gray-300" />
             )}
           </div>
           <div className="ml-7 mt-2">
             <Slider
               value={[layers.background.opacity]}
               onValueChange={([value]) => setOpacity('background', value)}
               max={100}
               min={0}
               step={1}
               className="w-full"
             />
           </div>
         </div>
       </div>
     </div>
   );
-}
+}
